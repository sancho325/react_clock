{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","window","setInterval","setState","prevProps","clockName","this","props","console","log","toLocaleTimeString","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","nameId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAUC,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,KAPL,wDASE,SAAmBK,GACbA,EAAUC,YAAcC,KAAKC,MAAMF,WAErCG,QAAQC,IAAR,uBAA4BL,EAAUC,UAAtC,eAAsDC,KAAKC,MAAMF,YAInEG,QAAQC,IAAIH,KAAKT,MAAMC,KAAKY,wBAhBhC,kCAmBE,WACEC,cAAcL,KAAKN,WApBvB,oBAuBE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,iCAASN,KAAKC,MAAMF,YACnB,YACAC,KAAKT,MAAMC,KAAKY,4BA5BzB,GAA2BG,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJxB,MAAQ,CACNyB,UAAU,EACVjB,UAAWU,K,EAGbQ,OAAS,E,uDAET,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BhB,KAAKiB,OAAStB,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEE,UAAWU,QAC1B,Q,oBAGL,WACE,MAAgCT,KAAKT,MAA7ByB,EAAR,EAAQA,SAAUjB,EAAlB,EAAkBA,UAElB,OACE,sBAAKO,UAAU,MAAf,UACE,6CAECU,GAAY,cAAC,EAAD,CAAOjB,UAAWA,W,GA7BrBQ,IAAMC,WAmCTO,IC/CfK,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.fd8c9fec.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = window.setInterval(() => {\n    this.setState({ date: new Date() });\n  }, 1000);\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.clockName}</strong>\n        {' time is '}\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  nameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.nameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}